{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","query","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","i","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAY5C,OACI,0BAAMC,SARW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,OAC3CN,EAAc,OAKd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAfc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCNlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EAAQF,EACA,KACA,mCAHK,SAICG,MAAM,gDAAD,OADX,mCACW,cAA+DD,EAA/D,kBAFX,OAFK,cAIbE,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVC,IAAG,UAACH,EAAII,cAAL,aAAC,EAAYC,iBAAiBF,QAXtB,kBAcZL,GAdY,4CAAH,sDCEPQ,EAAc,SAAC,GAAmB,EAAlBL,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAClC,OACI,yBAAKI,UAAU,0CACX,yBAAKC,IAAKL,EAAKM,IAAKP,IACpB,yBAAKK,UAAU,cAAcL,KCF5BQ,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAX,SAASA,GAAU,IAAD,EAChBd,mBAAS,CAC/BoB,KAAK,GACLc,SAAQ,IAH8B,mBACnCC,EADmC,KAC5BC,EAD4B,KAkB1C,OAZAC,qBAAU,WACNxB,EAAQC,GACPwB,MACG,SAAAC,GACIH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAIvB,CAACpB,IAEIqB,EDjBuBK,CAAa1B,GAA/Ba,EADuB,EAC5BP,KAAYc,EADgB,EAChBA,QAEnB,OACI,oCACA,4BAAKpB,GACJoB,EAAQ,cAAD,GACN,yBAAKJ,UAAU,aACZH,EAAOL,KAAK,SAACC,EAAIkB,GAAL,OACT,kBAAC,EAAD,eACIC,IAAKnB,EAAIC,IACLD,UEQToB,EAnBM,WAAO,IAAD,EACa3C,mBAAS,CAAC,aADvB,mBAChBQ,EADgB,KACJT,EADI,KAEvB,OACI,oCACI,8CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BACKS,EAAWc,KAAK,SAACR,EAAS2B,GAAV,OACb,kBAAC,EAAD,CACAC,IAAK5B,EACJA,SAAUA,U,MCX/B8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.031af2fa.chunk.js","sourcesContent":["import React,{useState} from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n    const [inputValue, setInputValue] = useState(``);\n    const handleInputChange = (e) =>{\n        setInputValue(e.target.value);\n    }\n    const handleSubmit = (e)=>{\n        e.preventDefault();\n        if(inputValue.trim().length>2){\n            setCategories(categories => [inputValue,...categories]);\n            setInputValue(``);\n        }\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async(category)=>{\n    const query = category;\n    const limit = '10';\n    const apiKey= 'AFWyHuxkaMBGUqkAmauon984HsFrBb8p';\n    const resp  = await fetch(`https://api.giphy.com/v1/gifs/search?api_key=${ apiKey }&q=${query}&limit=${limit}`);\n    const { data } = await resp.json(); \n    \n    const gifs = data.map(img=>{\n        return {\n            id:img.id,\n            title:img.title,\n            url:img.images?.downsized_medium.url,\n        }\n    });\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({id,title,url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}/>\n            <div className=\"card-title\">{title}</div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n    const {data:images,loading} = useFetchGifs(category);\n\n    return (\n        <>\n        <h3>{category}</h3>\n        {loading?`Cargando...`:``}\n        { <div className=\"card-grid\">\n            {images.map( (img,i)=>\n                <GifGridItem \n                    key={img.id} \n                    {...img}\n                />\n            )}\n        </div>}\n        </>\n    );\n}","import {useEffect, useState} from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = function(category){\n    const [state, setState] = useState({\n        data:[],\n        loading:true\n    });\n\n    useEffect(()=>{\n        getGifs(category) //Helpers\n        .then(\n            imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            }\n        );\n    },[category]);\n\n    return state;\n};","import React, {useState} from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n    const [categories, setCategories] = useState(['The Boys']);\n    return (\n        <>\n            <h2>Gif Expert App</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n            \n            <ol>\n                {categories.map( (category,i)=>\n                    <GifGrid\n                    key={category}\n                     category={category} />\n                )}\n            </ol>\n        </>\n    );\n}\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}